name: Makefile CI

on:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      name: Checkout camblet-driver
      with:
        submodules: recursive
        path: camblet-driver

    - uses: actions/checkout@v4
      name: Checkout camblet
      with:
        submodules: recursive
        repository: cisco-open/camblet
        path: camblet
        fetch-depth: 0

    - name: Setup Golang with cache
      uses: magnetikonline/action-golang-cache@v4
      with:
        go-version-file: camblet/go.mod

    - name: Install/setup prerequisites
      working-directory: camblet-driver
      run: make setup-vm

    - name: Build with DKMS
      working-directory: camblet-driver
      run: |
        TEST_TAG=0.0.0
        sudo cp -r . /usr/src/camblet-$TEST_TAG/
        sudo dkms add -m camblet -v $TEST_TAG
        if sudo dkms build -m camblet -v $TEST_TAG; then
          echo "DKMS build succeeded"
        else
          echo "DKMS build failed"
          cat /var/lib/dkms/camblet/$TEST_TAG/build/make.log
          exit 1
        fi
        sudo dkms install -m camblet -v $TEST_TAG

    - name: Build Camblet CLI
      working-directory: camblet
      run: |
        echo "checking out ${GITHUB_HEAD_REF} branch"
        git checkout ${GITHUB_HEAD_REF} || echo "branch not found"
        make build
  
    - name: Run the kernel module
      working-directory: camblet-driver 
      run: |
        sudo modprobe tls
        sudo modprobe camblet
        sudo dmesg -T

    # - name: Setup upterm session
    #   uses: lhotari/action-upterm@v1
    #   with:
    #     ## limits ssh access and adds the ssh public key for the user which triggered the workflow
    #     limit-access-to-actor: true

    - name: Run proxy-wasm smoke test
      working-directory: camblet-driver
      timeout-minutes: 1
      run: |
        touch /tmp/camblet.log /tmp/file-server.log /tmp/python.log
        echo "Run processes"
        ../camblet/build/camblet ca create-root camblet-root-ca > /tmp/camblet-ca.pem
        sudo AGENT_METADATACOLLECTORS_DOCKER_ENABLED=true ../camblet/build/camblet agent --config ../camblet/config.yaml --policies-path $(pwd)/../camblet/camblet.d/policies --services-path $(pwd)/../camblet/camblet.d/services --ca-pem-path /tmp/camblet-ca.pem > /tmp/camblet.log &
        go run test/file-server.go >/tmp/file-server.log &
        docker run -d --rm -p 8080:80 nginx
        sleep 2

        echo "Test downloading a bigger file"
        head -c 2M </dev/urandom > bigfile.o
        curl -v -o /tmp/bigfile_downloaded.o http://localhost:8000/bigfile.o

        echo "Test uploading this file"
        curl -v -F "bigfile_downloaded.o=@/tmp/bigfile_downloaded.o" http://localhost:8000/upload
        diff bigfile.o bigfile_downloaded.o

        echo "Test bearssl with non-bearssl compatibility"
        python3 -m http.server 7000 >/tmp/python.log &
        sleep 1
        echo "testing with curl..."
        curl -k -v https://localhost:7000/
        echo "testing with wget..."
        wget --no-check-certificate https://localhost:7000/

        echo "Test sendfile with NGiNX using curl"
        curl -v http://localhost:8080

        echo "Test sendfile with NGiNX using wget"
        wget -v http://localhost:8000

        echo "Stop processes"
        sudo kill -9 $(jobs -p)
        sudo pkill -9 camblet

    - name: kernel log
      if: always()
      run: |
        sudo dmesg -T

    - name: Camblet agent log
      if: always()
      run: |
        cat /tmp/camblet.log

    - name: File server log
      if: always()
      run: |
        cat /tmp/file-server.log

    - name: Python log
      if: always()
      run: |
        cat /tmp/python.log

    - name: Cleanup module
      run: sudo modprobe -r camblet
