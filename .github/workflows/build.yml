name: Makefile CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      name: Checkout nasp-kernel-module
      with:
        submodules: recursive
        path: nasp-kernel-module

    - uses: actions/checkout@v4
      name: Checkout nasp
      with:
        submodules: recursive
        repository: cisco-open/nasp
        path: nasp
        fetch-depth: 0

    - name: Setup Golang with cache
      uses: magnetikonline/action-golang-cache@v4
      with:
        go-version-file: nasp/go.mod

    - name: Install/setup prerequisites
      working-directory: nasp-kernel-module
      run: make setup-vm

    - name: Build with DKMS
      working-directory: nasp-kernel-module
      run: |
        sudo cp -r . /usr/src/nasp-0.1.0/
        sudo dkms add -m nasp -v 0.1.0
        if sudo dkms build -m nasp -v 0.1.0; then
          echo "DKMS build succeeded"
        else
          echo "DKMS build failed"
          cat /var/lib/dkms/nasp/0.1.0/build/make.log
          exit 1
        fi
        sudo dkms install -m nasp -v 0.1.0

    - name: Build Nasp CLI
      working-directory: nasp
      run: |
        echo "checking out ${GITHUB_HEAD_REF} branch"
        git checkout ${GITHUB_HEAD_REF} || echo "branch not found"
        make build
  
    - name: Run the kernel module
      working-directory: nasp-kernel-module 
      run: |
        sudo modprobe tls
        sudo modprobe nasp
        sudo dmesg -T

    # - name: Setup upterm session
    #   uses: lhotari/action-upterm@v1
    #   with:
    #     ## limits ssh access and adds the ssh public key for the user which triggered the workflow
    #     limit-access-to-actor: true

    - name: Run proxy-wasm smoke test
      working-directory: nasp-kernel-module
      timeout-minutes: 1
      run: |
        touch /tmp/nasp.log /tmp/file-server.log /tmp/python.log
        echo "Run processes"
        sudo ../nasp/build/nasp agent --config ../nasp/config.yaml --rules-path $(pwd)/../nasp/rules.d > /tmp/nasp.log &
        go run test/file-server.go >/tmp/file-server.log &
        docker run -d --rm -p 8080:80 nginx
        sleep 2

        echo "Test downloading a bigger file"
        head -c 2M </dev/urandom > bigfile.o
        curl -v -o /tmp/bigfile_downloaded.o http://localhost:8000/bigfile.o

        echo "Test uploading this file"
        curl -v -F "bigfile_downloaded.o=@/tmp/bigfile_downloaded.o" http://localhost:8000/upload
        diff bigfile.o bigfile_downloaded.o

        echo "Test bearssl with non-bearssl compatibility"
        python3 -m http.server 7000 >/tmp/python.log &
        sleep 1
        echo "testing with curl..."
        curl -k -v https://localhost:7000/
        echo "testing with wget..."
        wget --no-check-certificate https://localhost:7000/

        echo "Test sendfile with NGiNX using curl"
        curl -v http://localhost:8080

        echo "Test sendfile with NGiNX using wget"
        wget -v http://localhost:8000

        echo "Stop processes"
        sudo kill -9 $(jobs -p)
        sudo pkill -9 nasp

    - name: Print logs
      if: always()
      run: |
        cat /tmp/nasp.log /tmp/file-server.log /tmp/python.log
        sudo dmesg -T

    - name: Cleanup module
      run: sudo modprobe -r nasp
